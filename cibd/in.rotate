##################################################################
##IN.CIBD_MULTI                                                 ##
##Script to deposits prequenched clusters at random locations   ##
##on substrate. Compute RDFs and voronoi after impaction        ##
##################################################################
##Dependencies  :                   ##
##Influences    : lammpstrj.*, post/*, log.*, *.restart         ##
##################################################################
## ver. : 2019-07-24, Syamal Praneeth Chilakalapudi, INT, KIT   ##
##Author Email    :syamalpraneeth@gmail.com                     ##
##################################################################

#------------------------------------------------------------------READ DATA AND VARIABLES
variable        pot string ${args}
next            args
variable        e1 string ${args}
next            args
variable        e2 string ${args}
next            args
variable        x equal ${args}
next            args
variable        y equal ${args}
next            args
variable        frac equal $y/($x+$y)
variable        en equal ${args}
next            args
variable        T2 equal ${args}
next            args
variable        siz equal ${args}
next		args
variable	subsiz equal ${args}

variable        th equal ${T2}/20
variable        clusfile string "data.clus_${siz}nm"
variable        subfile string "data.substrate_${subsiz}nm"

#----------------------------------------------------------------INTRODUCE SUBSTRATE
#atom_modify map yes
read_restart    restart.substrate_multi_${subsiz}nm #restart.sub

variable        BoxL equal lx
variable        dispX equal random(0,${BoxL},475414)
variable        dispY equal random(0,${BoxL},475414)
variable        top equal bound(all,zmax)

#----------------------------------------------------------------INTITIALIZE
neigh_modify    every 1 delay 0 check yes
pair_style      eam/fs
pair_coeff      * * ${pot} ${e1} ${e2} ${e1} ${e2}
mass            1 63.546
mass            2 91.224
#min_style       fire
#minimize        1e-10  1e-10  100  100
group           cluster empty
group		statd empty
group		film empty
group           film union film cluster
group		interface empty
group		core empty
group		cores empty
group		shell empty

#----------------------------------------------------------------COMPUTES AND THERMO
compute         c1 statd temp
compute_modify  c1 dynamic/dof yes extra/dof 0
compute         c2 cluster temp
compute_modify  c2 dynamic/dof yes extra/dof 0
thermo_style    custom step pe ke press temp c_c2
thermo_modify   format float "% .6e"
thermo_modify   temp c1
thermo_modify	lost warn
thermo          ${th}

#-----------------------------------------------------------------FIXES FOR SUBSTRATE
fix             layrs all property/atom i_lyr
fix		corint all property/atom i_int

set             group buffr i_lyr 1
set             group statd i_lyr 2
set             group fixed i_lyr 3
group		substrate union buffr statd fixed
set		group substrate i_int 1
set		group cores i_int 2
set		group interface i_int 3

fix             f1 buffr nve
fix             f2 statd nvt temp 300 300 0.01
velocity        fixed set NULL NULL NULL
#velocity        fixed create 300 74657362 mom yes rot yes
#fix		f3 fixed nve
fix             f4 fixed setforce 0 0 NULL

#-------------------------------------------------------------------BALANCE
comm_style      tiled
balance         1.02 rcb weight group 1 fixed 0.05 out data/tmp.balance1_cibd_${siz}nm_${en}eV

#variable	dr equal floor(${T2}/5)
variable	th3 equal 3*${T2}
variable	dr equal ${th3}
dump            d2 all custom ${dr} data/lammpstrj.dep.cibd id type x y z vx vy vz i_lyr i_int
dump            d3 cluster custom ${dr} data/lammpstrj.dep.clus id type x y z vx vy vz i_lyr i_int
dump		d4 film custom ${dr} data/lammpstrj.dep.film id type x y z vx vy vz i_lyr i_int

#----------------------------------------------------DEPOSIT LOOP
reset_timestep	0
variable        Niter equal 50 #1000
variable a loop ${Niter}
label l1

#------------------------------------------------------------------1. introduce cluster
variable        filmtop equal ${top}				#Film top keeps changing withe every deposition. To account for growth of film

group           cluster id <= 0
read_data       ${clusfile} add append group cluster offset 2 0 0 0 0   #data file of cluster
#group           substrate subtract all cluster
group		film union film cluster
set             group cluster i_lyr 4

variable	hfheight equal $(lz)/2
variable        diff equal zhi-${filmtop}
print		${diff}
variable        clusdiaeval equal abs(bound(cluster,xmax)-bound(cluster,xmin))
variable        clusdia equal ${clusdiaeval}

variable        up equal 2*${clusdia}
#variable	up equal 1.4*${clusdia}					 #WRONG AND BAD FOR DYANMICS, good for testing

#print		${up}
if "${diff}<${up}" then "change_box      all z delta 0 ${up} units box"

#------------------------------------------------------------------2. fixes for cluster
fix		f6 film nve

#------------------------------------------------------------------3. recolour
variable        Rs equal (${clusdia}/2)-2 # 10*${siz}-6
variable        z equal "v_filmtop+v_clusdia"
displace_atoms  cluster move 0 0 ${z} units box
region          core sphere 0 0 ${z} ${Rs} side in
group           core region core
group           shell subtract cluster core
group           t1 type 1 3
group           t2 type 2 4
group           shellt1 intersect shell t1
group           shellt2 intersect shell t2
group           interface union shell interface
group           cores union core cores
set             group cores i_int 2
set             group interface i_int 3
region		core delete

#------------------------------------------------------------------4. set deposit conditions
variable        mclus equal mass(cluster)*(1.6605e-24)*(1e-3)   #metal units: m = grams/mol = g/(N_avogadro) = Kg/(N_avogadro*1000)
variable        E equal ${en}*(1.6e-19)                         #units: eV = 1.6e-19 Joules
variable        cvel equal (-1)*(sqrt(2*${E}/${mclus}))/100     #metal units: vel = 1 Angstr/ps = 100 m/s
variable        dxx   equal  "v_dispX-0.5*v_BoxL"
variable        dyy   equal  "v_dispY-0.5*v_BoxL"

variable        dzz   equal "v_filmtop+1.4*(v_clusdia)"
variable        flyT equal "(v_dzz-v_filmtop)/(abs(v_cvel)*(0.001))" #this is an indirect way of saying that the cluster dep height is always 1.4*cluster diameter
variable        runT equal "floor(v_flyT)+100" #"floor(v_flyT+v_T2)"

variable	p equal ${dxx}
variable	q equal ${dyy}
variable	thet1 equal 154 #random(0,360,458784)
variable	thet2 equal 302 #random(0,360,879869)
variable	thet3 equal 40 #random(0,360,387224)

#displace_atoms  cluster move $p $q ${dzz} units box
#delete_atoms    group cluster
delete_atoms    group substrate

#create_atoms	1 single $p $q ${dzz}
#create_atoms    1 single $p $q 10
#create_atoms    1 single $p $q 20
#create_atoms	1 single $p $q 30

variable k equal xcm(cluster,x)
variable l equal xcm(cluster,y)
variable m equal xcm(cluster,z)

create_atoms	2 single 0 0 0
group		at id 1 2 3 4
write_dump all custom dump1.atom id type x y z vx vy vz i_lyr i_int

displace_atoms	cluster rotate $k $l $m 1 0 0 ${thet1}
write_dump all atom dump2.atom

displace_atoms  cluster rotate $k $l $m 0 1 0 ${thet2}
write_dump all atom dump3.atom

displace_atoms  cluster rotate $k $l $m 0 0 1 ${thet3}
write_dump all atom dump4.atom


velocity        cluster create 300 74657362 mom yes rot yes
velocity        cluster set 0 0 ${cvel} units box

variable	boxht equal $(zhi)
print           "New top of film for iteration $a is ${top}" append data/filmtop.log screen yes
print           "approx clus diameter ${clusdia} angstrom"
print           'deposit height ${dzz} Angstrom'
#print		'box z+ height is: ${boxht}'
