##################################################################
##IN.CUZR_DEPOSIT	                                        ##
##Script to deposits prequenched clusters at random locations	##
##on substrate. Compute RDFs and voronoi after impaction	##
##################################################################
##Dependencies	: ../step1/*, ../step2/*                        ##
##Influences	: lammpstrj.*, post/*, log.*, *.restart         ##
##################################################################
## ver. : 2019-07-24, Syamal Praneeth Chilakalapudi, INT, KIT	##
##Author Email    :syamalpraneeth@gmail.com			##
##################################################################

shell		mkdir data

#--------------------------------------------------------------------INITIALISE
units           metal
boundary        p p p
atom_style      atomic 
atom_modify map array
lattice		fcc 4
timestep	0.001

#here I read out a template substrate and cut out a size that I want
read_data	data.Substrate
variable	d equal 100
region		whole block INF INF INF INF INF INF units box side in
region		extra block -$d $d -$d $d -10 10 units box side out
region		erase intersect 2 whole extra
delete_atoms	region erase
change_box	all x final -$d $d y final -$d $d z final -12 50 units box

mass		1 91.224	#Zr
mass		2 63.546	#Cu
pair_style      eam/alloy
pair_coeff      * * ZrCu.lammps.eam Zr Cu

min_style	fire
minimize	1e-10  1e-10  100  100

variable        clusT equal 300
variable	top equal bound(all,ymax)
variable	inter equal ${top}+2
variable	T equal 10000
variable	th equal v_T/10
variable	dr equal v_T/10

variable	BoxL  equal  lx
variable	dispX  equal  random(0,${BoxL},475414)
variable	dispY  equal  random(0,${BoxL},475414)

region          bottom block INF INF INF INF INF -8 units box
region		interface block INF INF INF INF ${top} ${inter} units box
region		film block INF INF INF INF ${top} INF units box

#-----------------------------------------------------------------------THERMO
thermo          ${th}
thermo_style    custom step pe press pxx pyy pzz lx ly lz vol temp

#----------------------------------------------------------GROUPS
group           bottomLayer region bottom
group		film region film

#---------------------------------------------------------------------DEPOSIT LOOP
dump		relax all custom ${dr} data/lammpstrj.deposit id type x y z

variable	filmtop equal "v_top"
print		"top of film initial ${top}"

variable	Niter equal 200
variable a loop ${Niter}
label l1

group		myG  id <= 0
read_data	myNanoP.txt add append group myG
#read_data	NanoP.relaxed add append group myG
group		subG subtract all myG 

variable	diff equal ($(lx)-v_top)
variable	clusdiaeval equal abs(bound(myG,xmax)-bound(myG,xmin))
variable	clusdia equal ${clusdiaeval}
print		"approx clus diameter v_clusdia angstrom"

if "${diff}<=${clusdia}" then "change_box all z delta 0 v_clusdia units box"

variable	E equal 50*(1.6e-19)				#units: eV
variable	mass equal (mass(myG))*(1.6605e-27)
variable        cvel equal (-1)*(sqrt(2*${E}/${mass}))/100	#metal units: vel = 1 Angstr/ps = 100 m/s = 0.0001 Angstr/tstep

print		"velocity ${cvel}"

variable	dxx   equal  "v_dispX-0.5*v_BoxL"
variable	dyy   equal  "v_dispY-0.5*v_BoxL"
variable	dzz   equal  "v_filmtop+2*(v_clusdia)"
#variable	dzz   equal  "v_filmtop+((v_flyT*abs(v_cvel)*(0.001))"
print		"deposit height ${dzz}"

variable	flyT equal "(v_clusdia)/(abs(v_cvel)*(0.001))"
variable	runT equal "floor(v_flyT+100)" #0 #0
print		"runtime ${runT}"

variable	up equal "2*(v_clusdia)"
change_box	all z delta 0 ${up} units box
displace_atoms myG move ${dxx} ${dyy} v_clusdia units box	#make it uniform 
#displace_atoms myG move 0 0 50 units box		#make it uniform  
reset_ids

velocity        myG create 300 74657362 mom yes rot yes
velocity        myG set 0 0 ${cvel} units box

velocity        subG create ${clusT} 74657362 mom yes rot yes
set             group bottomLayer vz  0
fix             freeze bottomLayer setforce NULL NULL 0.0 

#compute myT 	subG temp
#thermo_modify 	temp myT

fix            1 all nve
fix            2 bottomLayer temp/berendsen 200.0 200.0 0.1

print		"${clusdia}"
print		"${cvel}"
print		"${flyT}"
print           "${runT}"

run            ${runT}
variable	filmtop equal bound(film,zmax)
write_restart	data/restart.deposit
print		"Successful run iteration $a of ${Niter}" append data/success.log screen yes

#undump	relax
#uncompute myT
unfix	freeze 
unfix	1
unfix	2
group	myG	clear
group	subG 	clear
variable dxx	delete
variable dyy	delete
variable dzz  	delete

#if		"$a > ${Niter}" then "jump in.CuZr_deposit break"
next a
jump in.CuZr_deposit l1
#label		break
#----------------------------------------------------------GROUPS AND COMPUTES
group		g1 type 1
group		g2 type 2
group		film region film
group		film_g1 intersect film g1
group		film_g2 intersect film g2
compute		prdf11 film_g1 rdf 100
compute		prdf22 film_g2 rdf 100
compute		rdf film rdf 100 #cutoff 3.5
compute		bulk_rdf bottomLayer rdf 100 #cutoff 3.5
fix 		r1 all ave/time 1 1 1 c_prdf11[*] c_prdf22[*] c_rdf[*] c_bulk_rdf[*] file data/rdf_0GPa.rdf mode vector
run		0 pre yes post no
