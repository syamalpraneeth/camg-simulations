##################################################################
##IN.CLUSTER_ANNEAL_DATA					##
##Anneal and segregate already prepared amorphous cluster	##
##Dependencies	: none						##
##Influences: /data						##
##################################################################
## ver. : 2020-07-17, Syamal Praneeth Chilakalapudi, KIT, INT	##
##Author Email    :syamalpraneeth@gmail.com			##
##################################################################

#--------------------------------------------------------------VARIABLES FROM COMMAND LINE
variable        pot string ${args}
next            args
variable        e1 string ${args}
next            args
variable        e2 string ${args}
next            args
variable        x equal ${args}
next            args
variable        y equal ${args}
variable        frac equal $y/($x+$y)
next            args
variable        dia equal ${args}
next            args
variable        T1 equal ${args}
next            args
variable        quench_ramp equal ${args}
next		args
variable	anneal_ramp equal ${args}			#0.05/ps ramp rate
#variable        T2 equal ${args}

variable        th equal ${T1}/10			#thermo and dump values evaluated
variable        df equal ${T1}/20

variable	lat equal 3.6				#lattice parameter to define spacings
variable	s equal (${dia}/2+1)*10			#evalate box side based on cluster size
variable	R equal (${dia}/2)*10 #*(${lat})

variable	T_hot equal 2000
variable	T_cool equal 300
variable	T_anneal equal 500
variable        T2 equal (${T_hot}-${T_cool})*((10^3)/(${quench_ramp})) #0.1K/ps quench rate at 1 atm pressure
variable	ht equal (${T_anneal}-${T_cool})*((10^3)/(${anneal_ramp})) #0.5K/ps quench rate at 1 atm pressure

variable        t1 equal ${T1}/10
variable        t equal ${T2}/10
variable        ht_inter equal (${ht}/10)

#--------------------------------------------------------------------------------INTIALISE
units           metal					#fundamental LAMMPS and MD conditions initialization
dimension       3
atom_style      atomic
boundary        p p p
lattice		bcc ${lat}

variable	s equal 1
region		box block -$s $s -$s $s -$s $s units box
create_box	4 box
read_data	data.quench add merge offset 0 0 0 0 0

neigh_modify	every 1 delay 0 check yes

newton		on
pair_style	eam/fs					#EAM potentials best for metallic systems
pair_coeff      * * ${pot} ${e1} ${e2} ${e1} ${e2}	#4 types to unify data files to fit with CIBD deposited cluster tracking feature with atom ID offsets
#pair_coeff      * * Cu-Zr_2.eam.fs Cu Zr

#--------------------------------------------------------------------------------COMPUTES
compute         c1 all temp
#compute		c2 all xrd 1.5406 ${e1} ${e2} 2Theta 20 180 c 2 2 2 LP 1 echo #reduce the size of the computation by a factor of 2^3.
compute_modify  c1 dynamic/dof yes extra/dof 0		#It seemed like a dynamic evaluation was better
compute		c2 all pe/atom

#--------------------------------------------------------------------------------THERMO
thermo_style    custom step pe ke press temp vol enthalpy density etotal #v_ce1 v_se1 v_ce2 v_se2
thermo_modify   format float "% .6e"
thermo_modify   temp c1
thermo          ${th}
timestep        0.0010					#standard timestep 1fs for metallic systems

dump            d2 all custom ${df} data/msr_restart_${dia}nm.lammpstrj id type x y z vx vy vz #save atom trajectories/timestep for visualisation

#--------------------------------------------------------------------------------BALANCE AND EQUILIBRATE
fix		hold all nvt temp ${T_cool} ${T_cool} 0.1		#equilibriate cluster at T_cool temperature
#fix		center all recenter 0 0 0		#recenter cluster to facilitata a "clean" visual and easy export into next simulations with read_data
variable        tstop equal $(step)+${T1}
variable        start_step equal $(step)
variable        qloop loop 10                                                   #this loop is to save progress at ever $t steps of the whole run
label           l2
run		${t1} start ${start_step} stop ${tstop} post no
write_restart   data/restart.equilib_1_${dia}nm
print           "Succeeded step $(step); target step ${tstop}" append data/success.equilib_1_${dia}nm
next            qloop
jump            in.msr_equilib_data l2
unfix		hold
#unfix		center
#
#
#----------------------------------------------------------------------------------OUTPUT
variable        clusfile string "data/data.msr"               #output to save progress and to allow import to future simulations
variable        reclusfile string "data/restart.msr"
write_data      ${clusfile}
write_restart   ${reclusfile}

