##################################################################
##IN.GLASS	                                                ##
##Script to make a metallic glass of compostion mentioned in	##
## param file and heat						##
##Compute RDFs and voronoi during glasses formation at 6GPa and ##
##heating to 500 K.                         			##
##################################################################
##Dependencies	: param, job.script	                        ##
##Influences	: lammpstrj.*, post/*, log.*, *.restart         ##
##################################################################
## ver. : 2019-05-24, Syamal Praneeth Chilakalapudi, KIT, INT	##
##Author Email    :syamalpraneeth@gmail.com			##
##################################################################

#---------------------------------------------------------------------VARIABLES

variable	pot string ${args}
next		args
variable	e1 string ${args}
next		args
variable	e2 string ${args}
next		args
variable	x equal ${args}
next		args
variable	y equal ${args}
next		args
variable	frac equal $y/($x+$y)
variable	siz equal ${args}
variable	s equal (${args}+2)
next		args
variable	T1 equal ${args}
next		args
variable	quench_ramp equal ${args}
next		args
variable	heat_ramp equal ${args}

variable	th equal ${T1}/10
variable	dr equal ${T1}/10

variable	T_hot equal 500
variable	T_cool equal 50

variable	lat equal 3.6
variable	ht equal (${T_hot}-${T_cool})*((10^3)/(${heat_ramp})) #0.5K/ps ramp rate
variable	tquench equal (2000-${T_cool})*((10^3)/(${quench_ramp})) #0.1K/ps quench rate at 1 atm pressure
variable	quench_inter equal ${tquench}/10

#--------------------------------------------------------------------INITIALISE
units		metal
dimension	3
atom_style	atomic
boundary	p p p
lattice		bcc ${lat}

region		sbox block -$s $s -$s $s -$s $s side in
create_box	4 sbox
create_atoms	1 box
set		type 1 type/fraction 2 ${frac} 3456

neigh_modify	every 20 delay 0 check yes
pair_style	eam/fs
pair_coeff      * * ${pot} ${e1} ${e2} ${e1} ${e2}

#-----------------------------------------------------------------------THERMO
compute		c1 all temp
compute_modify  c1 dynamic/dof yes extra/dof 0
thermo_style	custom step pe ke press temp vol enthalpy density etotal
thermo_modify	format float "% .6e"
thermo_modify	temp c1
thermo		${th}
timestep	0.001

#------------------------------------------------------------------------DUMPS
dump            d1 all custom ${dr} data/msr_whole_${siz}.lammpstrj id type x y z vx vy vz

#---------------------------------------------------------------------MINIMIZE
#minimize        1.0e-4 1.0e-6 1000 1000
velocity	all create 2000 492851 mom yes rot yes dist gaussian
min_style	fire
minimize	1e-10  1e-10  100  100

#----------------------------------------------------------GROUPS AND COMPUTES
group		g1 type 1
group		g2 type 2
compute		prdf11 g1 rdf 100
compute		prdf22 g2 rdf 100
compute		rdf all rdf 100 #cutoff 3.5
compute		vor all voronoi/atom
info		computes out screen

#------------------------------------------------------------------EQUILIBRATE
#EQUILIBRIATE FOR 2ns
fix		f1 all npt temp 2000 2000 0.1 iso 0 0 0.1

variable	end equal ($(step)+${T1})
variable	inter equal (${T1})/10
label		lab1
run		${inter} start $(step) stop ${end} post no
print		"Succeeded step $(step); target step ${end}" append data/success.equilib1_${siz}nm
write_restart	data/restart.equilib1_${siz}nm
if 		"$(step)<${end}" then "jump in.glass lab1"
unfix		f1

#----------------------------------------------------------------------QUENCHING
fix		f2 all npt temp 2000 ${T_cool} 0.1 iso 0 0 0.1 #iso 1.01325 1.01325 1

variable	end equal ($(step)+${tquench})
label		lab2
run		${quench_inter} start $(step) stop ${end} post no
print		"Succeeded step $(step); target step ${end}" append data/success.quench_${siz}nm
write_restart	data/restart.quench_${siz}nm
if 		"$(step)<${end}" then "jump in.glass lab2"
unfix		f2

#------------------------------------------------------------------EQUILIBRATE
fix		f3 all npt temp ${T_cool} ${T_cool} 0.1 iso 0 0 0.1 #iso 1.01325 1.01325 1

variable	end equal ($(step)+${T1})
variable	inter equal (${T1})/10
label		lab3
run		${inter} start $(step) stop ${end} post no
print		"Succeeded step $(step); target step ${end}" append data/success.equilib2_${siz}nm
write_restart	data/restart.equilib2_${siz}nm
if 		"$(step)<${end}" then "jump in.glass lab3"
unfix		f3

fix             r1 all ave/time 1 1 1 c_prdf11[*] c_prdf22[*] c_rdf[*] file data/rdf_0GPa_${siz}nm.rdf mode vector
fix             v1 all ave/atom 1 1 1 c_vor[*]
run             0  pre yes post no
write_dump      all xyz data/sys_0GPa_${siz}nm.xyz modify sort id element ${e1} ${e2} ${e1} ${e2}
write_dump	all custom data/dump.voronoi_0GPa_${siz}nm id type x y z c_vor[*]
unfix		r1
unfix		v1

#Melt and cool the sample
#-----------------------------------------------------------------------HEATING
fix		heat all npt temp ${T_cool} ${T_hot} 0.1 iso 0 0 0.1 #iso 1.01325 1.01325 1
run		${ht}
unfix		heat

fix             r3 all ave/time 1 1 1 c_prdf11[*] c_prdf22[*] c_rdf[*] file data/rdf_${T_hot}K_${siz}nm.rdf mode vector
fix             v3 all ave/atom 1 1 1 c_vor[*]
run             0  pre yes post no
write_dump      all xyz data/sys_${T_hot}K_${siz}nm.xyz modify sort id element ${e1} ${e2} ${e1} ${e2}
write_dump	all custom data/dump.voronoi_${T_hot}K_${siz}nm id type x y z c_vor[*]

#------------------------------------------------------------------EQUILIBRATE
fix		f4 all nve
variable	end equal ($(step)+${T1})
variable	inter equal (${T1})/10
label		lab4
run		${inter} start $(step) stop ${end} post no
print		"Succeeded step $(step); target step ${end}" append data/success.equilib3_${siz}nm
write_restart	data/restart.equilib3_${siz}nm
if 		"$(step)<${end}" then "jump in.glass lab4"
unfix		f4

#-----------------------------------------------------------------------COOLING
fix             cool all npt temp ${T_hot} ${T_cool} 0.1 iso 0 0 0.1 #iso 1.01325 1.01325 1
run             ${ht}
unfix		cool
write_restart	data/restart.cooled_${siz}nm

fix             r3 all ave/time 1 1 1 c_prdf11[*] c_prdf22[*] c_rdf[*] file data/rdf_${T_cool}K_${siz}nm.rdf mode vector
fix             v3 all ave/atom 1 1 1 c_vor[*]
run             0  pre yes post no
write_dump      all xyz data/sys_${T_cool}K_${siz}nm.xyz modify sort id element ${e1} ${e2} ${e1} ${e2}
write_dump	all custom data/dump.voronoi_${T_cool}K_${siz}nm id type x y z c_vor[*]
write_data	data/data.msr_${siz}
write_restart	data/restart.msr_${siz}
