#!/bin/sh

##################################################################
##JOB.ARR.SCRIPT                                                ##
##Submit an array of jobs to make clusters of varying dia       ##
##Dependencies  : ~/Documents/dev/clusters/bulk-derived         ##
##Influences    :                                               ##
##################################################################
## ver. : 2019-09-04, Syamal Praneeth Chilakalapudi, KIT, INT   ##
##Author Email    :syamalpraneeth@gmail.com                     ##
##################################################################

#SBATCH --nodes=2
#SBATCH --ntasks-per-node=30
#SBATCH --time=6-00:00:00

#SBATCH --array=6
#SBATCH --job-name=clus_cuzr
#SBATCH --output=cluster_%anm.out
#SBATCH --mail-type=BEGIN
#SBATCH --mail-type=END
#SBATCH --mail-type=FAIL
#SBATCH --mail-user=syamal.chilakalapudi@kit.edu
#SBATCH --partition=gpu

#CHANGE WORKING DIRECTORY
cd ${SLURM_SUBMIT_DIR}

#COPY FILES FROM SOURCE
#cp ../../dev/clusters/bulk-derived/in.* .
#cp ../../dev/clusters/bulk-derived/*.py .
#cp -r ../../../dev/clusters/bulk-derived/post .
[[ -d "data" ]] || mkdir data                   #make data dir if it doesn't exist

#SUBMIT VARIABLES
#par=($(awk '{print $1}' param))
var=$SLURM_ARRAY_TASK_ID
par[0]=Cu-Zr_2.eam.fs  #pair_coeff
par[1]=Cu              #element1
par[2]=Zr              #element2
par[3]=50              #composition x
par[4]=50              #composition y
par[5]=${var}          #diameter of cluster (nm)
par[6]=2000000       #equilibriation duration
par[7]=0.1           #quench rate 0.01 K/ps. Leave as 500 for test
name="clus_${par[1]}${par[3]}${par[2]}${par[4]}"

#SET LAMMPS DIRECTORY AND INITIAL OUTPUTS
LMP_DIR=~/local/lammps/src/lmp_mpi
date
echo Nodes: $SLURM_JOB_NODELIST #Prints all the nodes you requested
echo LAMMPS Dir: $LMP_DIR
echo Number of Cores: $SLURM_CPUS_PER_TASK

#RUN SETTINGS
#module purge gnu/5.4.0
#module avail gnu8/8.3.0
#module avail intel/19.0.5.281

#RUN SETTINGS
export OMP_NUM_THREADS=1 #to disable OPENMP parallelization-suggested by Timo Strunk
#srun $LMP_DIR -i in.cluster -v args "${par[@]}" -l log.cluster_${var}nm
srun --mpi=pmi2 $LMP_DIR -i in.cluster -v args "${par[@]}" -l log.cluster_${var}nm
exit $?
